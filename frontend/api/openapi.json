{
    "openapi": "3.0.3",
    "info": {
      "title": "Assessment Management System API",
      "description": "A comprehensive API for managing assessments, questions, responses, and reports in a sustainability assessment system.\n\n## Features\n- Version-controlled question management\n- Assessment lifecycle management\n- File attachment support\n- Immutable assessment submissions\n- Comprehensive reporting\n- Offline synchronization support\n\n## Authentication\nAll endpoints require Keycloak JWT authentication. Include the JWT token in the Authorization header:\n`Authorization: Bearer <your-jwt-token>`\n\n## Versioning\nThe API supports response versioning to track changes and resolve conflicts during offline synchronization.\n",
      "contact": {
        "name": "Assessment System Team",
        "email": "support@assessment-system.com"
      },
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      },
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "https://virtserver.swaggerhub.com/adorsys-cc2/DGAT-Sustainaibility/1.0.0",
        "description": "SwaggerHub API Auto Mocking"
      },
      {
        "url": "https://api.assessment-system.com/api/v1",
        "description": "Production server"
      },
      {
        "url": "https://staging-api.assessment-system.com/api/v1",
        "description": "Staging server"
      },
      {
        "url": "http://localhost:8080/api/v1",
        "description": "Development server"
      }
    ],
    "security": [
      {
        "BearerAuth": []
      }
    ],
    "tags": [
      {
        "name": "Health",
        "description": "System health and status endpoints"
      },
      {
        "name": "Questions",
        "description": "Question management and versioning"
      },
      {
        "name": "Assessments",
        "description": "Assessment lifecycle management"
      },
      {
        "name": "Responses",
        "description": "Assessment response management"
      },
      {
        "name": "Files",
        "description": "File upload and management"
      },
      {
        "name": "Reports",
        "description": "Report generation and retrieval"
      },
      {
        "name": "Sync",
        "description": "Offline synchronization"
      }
    ],
    "paths": {
      "/health": {
        "get": {
          "tags": [
            "Health"
          ],
          "summary": "Health check",
          "description": "Check system health and availability",
          "responses": {
            "200": {
              "description": "System is healthy",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HealthResponse"
                  }
                }
              }
            }
          },
          "security": []
        }
      },
      "/metrics": {
        "get": {
          "tags": [
            "Health"
          ],
          "summary": "System metrics",
          "description": "Get system performance metrics",
          "responses": {
            "200": {
              "description": "System metrics",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MetricsResponse"
                  }
                }
              }
            }
          },
          "security": []
        }
      },
      "/questions": {
        "get": {
          "tags": [
            "Questions"
          ],
          "summary": "List questions",
          "description": "Get paginated list of questions with their latest revisions",
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "Page number (1-based)",
              "required": false,
              "schema": {
                "minimum": 1,
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of items per page",
              "required": false,
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer",
                "default": 20
              }
            },
            {
              "name": "category",
              "in": "query",
              "description": "Filter by question category",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "language",
              "in": "query",
              "description": "Preferred language for multilingual content",
              "required": false,
              "schema": {
                "type": "string",
                "example": "en"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of questions",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/QuestionListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        },
        "post": {
          "tags": [
            "Questions"
          ],
          "summary": "Create question",
          "description": "Create a new question with initial revision",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateQuestionRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Question created successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/QuestionResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestError"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "403": {
              "$ref": "#/components/responses/ForbiddenError"
            },
            "422": {
              "$ref": "#/components/responses/ValidationError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        }
      },
      "/questions/{questionId}": {
        "get": {
          "tags": [
            "Questions"
          ],
          "summary": "Get question",
          "description": "Get specific question with all revisions",
          "parameters": [
            {
              "name": "questionId",
              "in": "path",
              "description": "Question ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Question details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/QuestionWithRevisionsResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        },
        "put": {
          "tags": [
            "Questions"
          ],
          "summary": "Update question",
          "description": "Create new revision of existing question",
          "parameters": [
            {
              "name": "questionId",
              "in": "path",
              "description": "Question ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateQuestionRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Question updated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/QuestionRevisionResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestError"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "403": {
              "$ref": "#/components/responses/ForbiddenError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "422": {
              "$ref": "#/components/responses/ValidationError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        },
        "delete": {
          "tags": [
            "Questions"
          ],
          "summary": "Delete question",
          "description": "Soft delete question (admin only)",
          "parameters": [
            {
              "name": "questionId",
              "in": "path",
              "description": "Question ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Question deleted successfully"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "403": {
              "$ref": "#/components/responses/ForbiddenError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        }
      },
      "/questions/{questionId}/revisions": {
        "get": {
          "tags": [
            "Questions"
          ],
          "summary": "Get question revisions",
          "description": "Get all revisions for a specific question",
          "parameters": [
            {
              "name": "questionId",
              "in": "path",
              "description": "Question ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of question revisions",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/QuestionRevisionListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        }
      },
      "/questions/revisions/{revisionId}": {
        "get": {
          "tags": [
            "Questions"
          ],
          "summary": "Get question revision",
          "description": "Get specific question revision",
          "parameters": [
            {
              "name": "revisionId",
              "in": "path",
              "description": "Question revision ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Question revision details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/QuestionRevisionResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        }
      },
      "/assessments": {
        "get": {
          "tags": [
            "Assessments"
          ],
          "summary": "List assessments",
          "description": "Get paginated list of user's assessments",
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "Page number (1-based)",
              "required": false,
              "schema": {
                "minimum": 1,
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of items per page",
              "required": false,
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer",
                "default": 20
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Filter by assessment status",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "draft",
                  "submitted",
                  "completed"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of assessments",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AssessmentListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        },
        "post": {
          "tags": [
            "Assessments"
          ],
          "summary": "Create assessment",
          "description": "Create new assessment",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAssessmentRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Assessment created successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AssessmentResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestError"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "422": {
              "$ref": "#/components/responses/ValidationError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        }
      },
      "/assessments/{assessmentId}": {
        "get": {
          "tags": [
            "Assessments"
          ],
          "summary": "Get assessment",
          "description": "Get specific assessment with responses",
          "parameters": [
            {
              "name": "assessmentId",
              "in": "path",
              "description": "Assessment ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Assessment details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AssessmentWithResponsesResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        },
        "put": {
          "tags": [
            "Assessments"
          ],
          "summary": "Update assessment",
          "description": "Update assessment metadata",
          "parameters": [
            {
              "name": "assessmentId",
              "in": "path",
              "description": "Assessment ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAssessmentRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Assessment updated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AssessmentResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestError"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "422": {
              "$ref": "#/components/responses/ValidationError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        },
        "delete": {
          "tags": [
            "Assessments"
          ],
          "summary": "Delete assessment",
          "description": "Delete draft assessment",
          "parameters": [
            {
              "name": "assessmentId",
              "in": "path",
              "description": "Assessment ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Assessment deleted successfully"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "409": {
              "description": "Cannot delete submitted assessment",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        }
      },
      "/assessments/{assessmentId}/submit": {
        "post": {
          "tags": [
            "Assessments"
          ],
          "summary": "Submit assessment",
          "description": "Submit assessment for grading (creates immutable submission)",
          "parameters": [
            {
              "name": "assessmentId",
              "in": "path",
              "description": "Assessment ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Assessment submitted successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AssessmentSubmissionResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestError"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "409": {
              "description": "Assessment already submitted",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        }
      },
      "/assessments/{assessmentId}/responses": {
        "get": {
          "tags": [
            "Responses"
          ],
          "summary": "Get assessment responses",
          "description": "Get all responses for an assessment",
          "parameters": [
            {
              "name": "assessmentId",
              "in": "path",
              "description": "Assessment ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of assessment responses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        },
        "post": {
          "tags": [
            "Responses"
          ],
          "summary": "Create response",
          "description": "Create new response for assessment",
          "parameters": [
            {
              "name": "assessmentId",
              "in": "path",
              "description": "Assessment ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Response created successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestError"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "422": {
              "$ref": "#/components/responses/ValidationError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        }
      },
      "/assessments/{assessmentId}/responses/{responseId}": {
        "get": {
          "tags": [
            "Responses"
          ],
          "summary": "Get response",
          "description": "Get specific response",
          "parameters": [
            {
              "name": "assessmentId",
              "in": "path",
              "description": "Assessment ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "responseId",
              "in": "path",
              "description": "Response ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Response details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        },
        "put": {
          "tags": [
            "Responses"
          ],
          "summary": "Update response",
          "description": "Update response (creates new version)",
          "parameters": [
            {
              "name": "assessmentId",
              "in": "path",
              "description": "Assessment ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "responseId",
              "in": "path",
              "description": "Response ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponseRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Response updated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestError"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "409": {
              "description": "Version conflict detected",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ConflictResponse"
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        },
        "delete": {
          "tags": [
            "Responses"
          ],
          "summary": "Delete response",
          "description": "Delete response",
          "parameters": [
            {
              "name": "assessmentId",
              "in": "path",
              "description": "Assessment ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "responseId",
              "in": "path",
              "description": "Response ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Response deleted successfully"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        }
      },
      "/assessments/{assessmentId}/responses/{responseId}/history": {
        "get": {
          "tags": [
            "Responses"
          ],
          "summary": "Get response history",
          "description": "Get response version history",
          "parameters": [
            {
              "name": "assessmentId",
              "in": "path",
              "description": "Assessment ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "responseId",
              "in": "path",
              "description": "Response ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Response version history",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseHistoryResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        }
      },
      "/files": {
        "post": {
          "tags": [
            "Files"
          ],
          "summary": "Upload file",
          "description": "Upload file and return file ID",
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/files_body"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "File uploaded successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FileUploadResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestError"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "413": {
              "description": "File too large",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        }
      },
      "/files/{fileId}": {
        "get": {
          "tags": [
            "Files"
          ],
          "summary": "Download file",
          "description": "Download file content",
          "parameters": [
            {
              "name": "fileId",
              "in": "path",
              "description": "File ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "File content",
              "content": {
                "application/octet-stream": {
                  "schema": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        },
        "delete": {
          "tags": [
            "Files"
          ],
          "summary": "Delete file",
          "description": "Delete file (if not referenced)",
          "parameters": [
            {
              "name": "fileId",
              "in": "path",
              "description": "File ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "File deleted successfully"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "409": {
              "description": "File is referenced and cannot be deleted",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        }
      },
      "/files/{fileId}/metadata": {
        "get": {
          "tags": [
            "Files"
          ],
          "summary": "Get file metadata",
          "description": "Get file metadata",
          "parameters": [
            {
              "name": "fileId",
              "in": "path",
              "description": "File ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "File metadata",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FileMetadataResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        }
      },
      "/assessments/{assessmentId}/responses/{responseId}/files": {
        "post": {
          "tags": [
            "Files"
          ],
          "summary": "Attach file to response",
          "description": "Attach existing file to response",
          "parameters": [
            {
              "name": "assessmentId",
              "in": "path",
              "description": "Assessment ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "responseId",
              "in": "path",
              "description": "Response ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachFileRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "File attached successfully"
            },
            "400": {
              "$ref": "#/components/responses/BadRequestError"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        }
      },
      "/assessments/{assessmentId}/responses/{responseId}/files/{fileId}": {
        "delete": {
          "tags": [
            "Files"
          ],
          "summary": "Remove file from response",
          "description": "Remove file attachment from response",
          "parameters": [
            {
              "name": "assessmentId",
              "in": "path",
              "description": "Assessment ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "responseId",
              "in": "path",
              "description": "Response ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "fileId",
              "in": "path",
              "description": "File ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "File removed successfully"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        }
      },
      "/assessments/{assessmentId}/reports": {
        "get": {
          "tags": [
            "Reports"
          ],
          "summary": "List reports",
          "description": "Get available reports for assessment",
          "parameters": [
            {
              "name": "assessmentId",
              "in": "path",
              "description": "Assessment ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of available reports",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ReportListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        },
        "post": {
          "tags": [
            "Reports"
          ],
          "summary": "Generate report",
          "description": "Generate new report for assessment",
          "parameters": [
            {
              "name": "assessmentId",
              "in": "path",
              "description": "Assessment ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateReportRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Report generation started",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ReportGenerationResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestError"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        }
      },
      "/reports/{reportId}": {
        "get": {
          "tags": [
            "Reports"
          ],
          "summary": "Get report",
          "description": "Get specific report details",
          "parameters": [
            {
              "name": "reportId",
              "in": "path",
              "description": "Report ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Report details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ReportResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        }
      },
      "/reports/{reportId}/download": {
        "get": {
          "tags": [
            "Reports"
          ],
          "summary": "Download report",
          "description": "Download report file",
          "parameters": [
            {
              "name": "reportId",
              "in": "path",
              "description": "Report ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Report file",
              "content": {
                "application/pdf": {
                  "schema": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "text/csv": {
                  "schema": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        }
      },
      "/sync/assessments": {
        "post": {
          "tags": [
            "Sync"
          ],
          "summary": "Sync assessment changes",
          "description": "Synchronize offline assessment changes",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyncAssessmentsRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Sync completed successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SyncResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestError"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "409": {
              "description": "Sync conflicts detected",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SyncConflictResponse"
                  }
                }
              }
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        }
      },
      "/sync/responses": {
        "post": {
          "tags": [
            "Sync"
          ],
          "summary": "Sync response changes",
          "description": "Synchronize offline response changes",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyncResponsesRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Sync completed successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SyncResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestError"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "409": {
              "description": "Sync conflicts detected",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SyncConflictResponse"
                  }
                }
              }
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        }
      },
      "/sync/status/{syncId}": {
        "get": {
          "tags": [
            "Sync"
          ],
          "summary": "Get sync status",
          "description": "Get synchronization status",
          "parameters": [
            {
              "name": "syncId",
              "in": "path",
              "description": "Sync operation ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Sync status",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SyncStatusResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundError"
            },
            "500": {
              "$ref": "#/components/responses/InternalServerError"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "ErrorResponse": {
          "required": [
            "code",
            "error"
          ],
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Error message"
            },
            "code": {
              "type": "string",
              "description": "Error code"
            },
            "details": {
              "type": "object",
              "description": "Additional error details"
            }
          }
        },
        "PaginationMeta": {
          "required": [
            "limit",
            "page",
            "total",
            "totalPages"
          ],
          "type": "object",
          "properties": {
            "page": {
              "type": "integer",
              "description": "Current page number"
            },
            "limit": {
              "type": "integer",
              "description": "Items per page"
            },
            "total": {
              "type": "integer",
              "description": "Total number of items"
            },
            "totalPages": {
              "type": "integer",
              "description": "Total number of pages"
            }
          }
        },
        "HealthResponse": {
          "required": [
            "status",
            "timestamp",
            "version"
          ],
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "enum": [
                "healthy",
                "unhealthy"
              ]
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            },
            "version": {
              "type": "string"
            },
            "checks": {
              "$ref": "#/components/schemas/HealthResponse_checks"
            }
          }
        },
        "MetricsResponse": {
          "type": "object",
          "properties": {
            "uptime": {
              "type": "number",
              "description": "System uptime in seconds"
            },
            "requests": {
              "$ref": "#/components/schemas/MetricsResponse_requests"
            },
            "memory": {
              "$ref": "#/components/schemas/MetricsResponse_memory"
            },
            "database": {
              "$ref": "#/components/schemas/MetricsResponse_database"
            }
          }
        },
        "MultilingualText": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "example": {
            "en": "What is your organization's sustainability policy?",
            "fr": "Quelle est la politique de durabilité de votre organisation?"
          }
        },
        "Question": {
          "required": [
            "category",
            "createdAt",
            "questionId"
          ],
          "type": "object",
          "properties": {
            "questionId": {
              "type": "string",
              "format": "uuid"
            },
            "category": {
              "type": "string"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "latestRevision": {
              "$ref": "#/components/schemas/QuestionRevision"
            }
          }
        },
        "QuestionRevision": {
          "required": [
            "createdAt",
            "questionId",
            "questionRevisionId",
            "text",
            "weight"
          ],
          "type": "object",
          "properties": {
            "questionRevisionId": {
              "type": "string",
              "format": "uuid"
            },
            "questionId": {
              "type": "string",
              "format": "uuid"
            },
            "text": {
              "$ref": "#/components/schemas/MultilingualText"
            },
            "weight": {
              "maximum": 1,
              "minimum": 0,
              "type": "number",
              "format": "float"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CreateQuestionRequest": {
          "required": [
            "category",
            "text",
            "weight"
          ],
          "type": "object",
          "properties": {
            "category": {
              "type": "string",
              "description": "Question category"
            },
            "text": {
              "$ref": "#/components/schemas/MultilingualText"
            },
            "weight": {
              "maximum": 1,
              "minimum": 0,
              "type": "number",
              "format": "float"
            }
          }
        },
        "UpdateQuestionRequest": {
          "required": [
            "text",
            "weight"
          ],
          "type": "object",
          "properties": {
            "text": {
              "$ref": "#/components/schemas/MultilingualText"
            },
            "weight": {
              "maximum": 1,
              "minimum": 0,
              "type": "number",
              "format": "float"
            }
          }
        },
        "QuestionResponse": {
          "required": [
            "question"
          ],
          "type": "object",
          "properties": {
            "question": {
              "$ref": "#/components/schemas/Question"
            }
          }
        },
        "QuestionWithRevisionsResponse": {
          "required": [
            "question",
            "revisions"
          ],
          "type": "object",
          "properties": {
            "question": {
              "$ref": "#/components/schemas/Question"
            },
            "revisions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/QuestionRevision"
              }
            }
          }
        },
        "QuestionRevisionResponse": {
          "required": [
            "revision"
          ],
          "type": "object",
          "properties": {
            "revision": {
              "$ref": "#/components/schemas/QuestionRevision"
            }
          }
        },
        "QuestionListResponse": {
          "required": [
            "meta",
            "questions"
          ],
          "type": "object",
          "properties": {
            "questions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Question"
              }
            },
            "meta": {
              "$ref": "#/components/schemas/PaginationMeta"
            }
          }
        },
        "QuestionRevisionListResponse": {
          "required": [
            "revisions"
          ],
          "type": "object",
          "properties": {
            "revisions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/QuestionRevision"
              }
            }
          }
        },
        "Assessment": {
          "required": [
            "assessmentId",
            "createdAt",
            "language",
            "status",
            "updatedAt",
            "userId"
          ],
          "type": "object",
          "properties": {
            "assessmentId": {
              "type": "string",
              "format": "uuid"
            },
            "userId": {
              "type": "string",
              "description": "Keycloak user ID"
            },
            "language": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "enum": [
                "draft",
                "submitted",
                "completed"
              ]
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CreateAssessmentRequest": {
          "required": [
            "language"
          ],
          "type": "object",
          "properties": {
            "language": {
              "type": "string",
              "description": "Assessment language"
            }
          }
        },
        "UpdateAssessmentRequest": {
          "type": "object",
          "properties": {
            "language": {
              "type": "string",
              "description": "Assessment language"
            }
          }
        },
        "AssessmentResponse": {
          "required": [
            "assessment"
          ],
          "type": "object",
          "properties": {
            "assessment": {
              "$ref": "#/components/schemas/Assessment"
            }
          }
        },
        "AssessmentWithResponsesResponse": {
          "required": [
            "assessment",
            "responses"
          ],
          "type": "object",
          "properties": {
            "assessment": {
              "$ref": "#/components/schemas/Assessment"
            },
            "responses": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "AssessmentListResponse": {
          "required": [
            "assessments",
            "meta"
          ],
          "type": "object",
          "properties": {
            "assessments": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Assessment"
              }
            },
            "meta": {
              "$ref": "#/components/schemas/PaginationMeta"
            }
          }
        },
        "AssessmentSubmission": {
          "required": [
            "assessmentId",
            "content",
            "submittedAt",
            "userId"
          ],
          "type": "object",
          "properties": {
            "assessmentId": {
              "type": "string",
              "format": "uuid"
            },
            "userId": {
              "type": "string"
            },
            "content": {
              "type": "object",
              "description": "Immutable snapshot of assessment responses"
            },
            "submittedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "AssessmentSubmissionResponse": {
          "required": [
            "submission"
          ],
          "type": "object",
          "properties": {
            "submission": {
              "$ref": "#/components/schemas/AssessmentSubmission"
            }
          }
        },
        "Response": {
          "required": [
            "assessmentId",
            "questionRevisionId",
            "response",
            "responseId",
            "updatedAt",
            "version"
          ],
          "type": "object",
          "properties": {
            "responseId": {
              "type": "string",
              "format": "uuid"
            },
            "assessmentId": {
              "type": "string",
              "format": "uuid"
            },
            "questionRevisionId": {
              "type": "string",
              "format": "uuid"
            },
            "response": {
              "type": "string",
              "description": "User's response text"
            },
            "version": {
              "type": "integer",
              "description": "Response version for conflict resolution"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            },
            "files": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FileMetadata"
              }
            }
          }
        },
        "CreateResponseRequest": {
          "required": [
            "questionRevisionId",
            "response"
          ],
          "type": "object",
          "properties": {
            "questionRevisionId": {
              "type": "string",
              "format": "uuid"
            },
            "response": {
              "type": "string",
              "description": "User's response text"
            }
          }
        },
        "UpdateResponseRequest": {
          "required": [
            "response",
            "version"
          ],
          "type": "object",
          "properties": {
            "response": {
              "type": "string",
              "description": "Updated response text"
            },
            "version": {
              "type": "integer",
              "description": "Current version for conflict detection"
            }
          }
        },
        "ResponseResponse": {
          "required": [
            "response"
          ],
          "type": "object",
          "properties": {
            "response": {
              "$ref": "#/components/schemas/Response"
            }
          }
        },
        "ResponseListResponse": {
          "required": [
            "responses"
          ],
          "type": "object",
          "properties": {
            "responses": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "ResponseVersion": {
          "required": [
            "response",
            "updatedAt",
            "version"
          ],
          "type": "object",
          "properties": {
            "version": {
              "type": "integer"
            },
            "response": {
              "type": "string"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "ResponseHistoryResponse": {
          "required": [
            "history",
            "responseId"
          ],
          "type": "object",
          "properties": {
            "responseId": {
              "type": "string",
              "format": "uuid"
            },
            "history": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ResponseVersion"
              }
            }
          }
        },
        "ConflictResponse": {
          "required": [
            "code",
            "currentVersion",
            "error",
            "serverResponse",
            "yourVersion"
          ],
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Conflict error message"
            },
            "code": {
              "type": "string",
              "enum": [
                "VERSION_CONFLICT"
              ]
            },
            "currentVersion": {
              "type": "integer",
              "description": "Current version in database"
            },
            "yourVersion": {
              "type": "integer",
              "description": "Version in the request"
            },
            "serverResponse": {
              "type": "string",
              "description": "Current response text in database"
            }
          }
        },
        "FileMetadata": {
          "required": [
            "contentType",
            "createdAt",
            "fileId",
            "filename",
            "size"
          ],
          "type": "object",
          "properties": {
            "fileId": {
              "type": "string",
              "format": "uuid"
            },
            "filename": {
              "type": "string"
            },
            "size": {
              "type": "integer",
              "description": "File size in bytes"
            },
            "contentType": {
              "type": "string"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "metadata": {
              "type": "object",
              "description": "Additional file metadata"
            }
          }
        },
        "FileUploadResponse": {
          "required": [
            "file"
          ],
          "type": "object",
          "properties": {
            "file": {
              "$ref": "#/components/schemas/FileMetadata"
            }
          }
        },
        "FileMetadataResponse": {
          "required": [
            "metadata"
          ],
          "type": "object",
          "properties": {
            "metadata": {
              "$ref": "#/components/schemas/FileMetadata"
            }
          }
        },
        "AttachFileRequest": {
          "required": [
            "fileId"
          ],
          "type": "object",
          "properties": {
            "fileId": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "Report": {
          "required": [
            "assessmentId",
            "reportId",
            "reportType",
            "status"
          ],
          "type": "object",
          "properties": {
            "reportId": {
              "type": "string",
              "format": "uuid"
            },
            "assessmentId": {
              "type": "string",
              "format": "uuid"
            },
            "reportType": {
              "type": "string",
              "enum": [
                "PDF",
                "CSV"
              ]
            },
            "status": {
              "type": "string",
              "enum": [
                "pending",
                "processing",
                "completed",
                "failed"
              ]
            },
            "generatedAt": {
              "type": "string",
              "format": "date-time"
            },
            "data": {
              "type": "object",
              "description": "Report content and metadata"
            }
          }
        },
        "GenerateReportRequest": {
          "required": [
            "reportType"
          ],
          "type": "object",
          "properties": {
            "reportType": {
              "type": "string",
              "enum": [
                "PDF",
                "CSV"
              ]
            },
            "options": {
              "type": "object",
              "description": "Report generation options"
            }
          }
        },
        "ReportGenerationResponse": {
          "required": [
            "reportId",
            "status"
          ],
          "type": "object",
          "properties": {
            "reportId": {
              "type": "string",
              "format": "uuid"
            },
            "status": {
              "type": "string",
              "enum": [
                "pending",
                "processing"
              ]
            }
          }
        },
        "ReportResponse": {
          "required": [
            "report"
          ],
          "type": "object",
          "properties": {
            "report": {
              "$ref": "#/components/schemas/Report"
            }
          }
        },
        "ReportListResponse": {
          "required": [
            "reports"
          ],
          "type": "object",
          "properties": {
            "reports": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Report"
              }
            }
          }
        },
        "SyncChange": {
          "required": [
            "data",
            "id",
            "timestamp",
            "type"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "type": {
              "type": "string",
              "enum": [
                "create",
                "update",
                "delete"
              ]
            },
            "data": {
              "type": "object",
              "description": "Change data"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            },
            "version": {
              "type": "integer",
              "description": "Version for conflict resolution"
            }
          }
        },
        "SyncAssessmentsRequest": {
          "required": [
            "changes"
          ],
          "type": "object",
          "properties": {
            "changes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SyncChange"
              }
            }
          }
        },
        "SyncResponsesRequest": {
          "required": [
            "changes"
          ],
          "type": "object",
          "properties": {
            "changes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SyncChange"
              }
            }
          }
        },
        "SyncResult": {
          "required": [
            "id",
            "status"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "status": {
              "type": "string",
              "enum": [
                "success",
                "conflict",
                "error"
              ]
            },
            "message": {
              "type": "string",
              "description": "Result message"
            }
          }
        },
        "SyncResponse": {
          "required": [
            "results",
            "syncId"
          ],
          "type": "object",
          "properties": {
            "syncId": {
              "type": "string",
              "format": "uuid"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SyncResult"
              }
            },
            "conflicts": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ConflictResponse"
              }
            }
          }
        },
        "SyncConflictResponse": {
          "required": [
            "conflicts",
            "syncId"
          ],
          "type": "object",
          "properties": {
            "syncId": {
              "type": "string",
              "format": "uuid"
            },
            "conflicts": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ConflictResponse"
              }
            }
          }
        },
        "SyncStatusResponse": {
          "required": [
            "progress",
            "status",
            "syncId"
          ],
          "type": "object",
          "properties": {
            "syncId": {
              "type": "string",
              "format": "uuid"
            },
            "status": {
              "type": "string",
              "enum": [
                "pending",
                "processing",
                "completed",
                "failed"
              ]
            },
            "progress": {
              "maximum": 100,
              "minimum": 0,
              "type": "number",
              "description": "Sync progress percentage"
            },
            "message": {
              "type": "string",
              "description": "Status message"
            }
          }
        },
        "files_body": {
          "required": [
            "file"
          ],
          "type": "object",
          "properties": {
            "file": {
              "type": "string",
              "description": "File to upload",
              "format": "binary"
            },
            "metadata": {
              "type": "object",
              "description": "Optional file metadata"
            }
          }
        },
        "HealthResponse_checks": {
          "type": "object",
          "properties": {
            "database": {
              "type": "string",
              "enum": [
                "up",
                "down"
              ]
            },
            "keycloak": {
              "type": "string",
              "enum": [
                "up",
                "down"
              ]
            }
          }
        },
        "MetricsResponse_requests": {
          "type": "object",
          "properties": {
            "total": {
              "type": "integer"
            },
            "per_second": {
              "type": "number"
            }
          }
        },
        "MetricsResponse_memory": {
          "type": "object",
          "properties": {
            "used": {
              "type": "integer"
            },
            "total": {
              "type": "integer"
            }
          }
        },
        "MetricsResponse_database": {
          "type": "object",
          "properties": {
            "connections": {
              "type": "integer"
            },
            "queries_per_second": {
              "type": "number"
            }
          }
        }
      },
      "responses": {
        "BadRequestError": {
          "description": "Bad request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            }
          }
        },
        "UnauthorizedError": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            }
          }
        },
        "ForbiddenError": {
          "description": "Forbidden",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            }
          }
        },
        "NotFoundError": {
          "description": "Not found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            }
          }
        },
        "ValidationError": {
          "description": "Validation error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            }
          }
        },
        "InternalServerError": {
          "description": "Internal server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            }
          }
        }
      },
      "parameters": {
        "Page": {
          "name": "page",
          "in": "query",
          "description": "Page number (1-based)",
          "required": false,
          "schema": {
            "minimum": 1,
            "type": "integer",
            "default": 1
          }
        },
        "Limit": {
          "name": "limit",
          "in": "query",
          "description": "Number of items per page",
          "required": false,
          "schema": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "default": 20
          }
        },
        "Category": {
          "name": "category",
          "in": "query",
          "description": "Filter by question category",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "Language": {
          "name": "language",
          "in": "query",
          "description": "Preferred language for multilingual content",
          "required": false,
          "schema": {
            "type": "string",
            "example": "en"
          }
        },
        "Status": {
          "name": "status",
          "in": "query",
          "description": "Filter by assessment status",
          "required": false,
          "schema": {
            "type": "string",
            "enum": [
              "draft",
              "submitted",
              "completed"
            ]
          }
        },
        "QuestionId": {
          "name": "questionId",
          "in": "path",
          "description": "Question ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        "RevisionId": {
          "name": "revisionId",
          "in": "path",
          "description": "Question revision ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        "AssessmentId": {
          "name": "assessmentId",
          "in": "path",
          "description": "Assessment ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        "ResponseId": {
          "name": "responseId",
          "in": "path",
          "description": "Response ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        "FileId": {
          "name": "fileId",
          "in": "path",
          "description": "File ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        "ReportId": {
          "name": "reportId",
          "in": "path",
          "description": "Report ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        "SyncId": {
          "name": "syncId",
          "in": "path",
          "description": "Sync operation ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "securitySchemes": {
        "BearerAuth": {
          "type": "http",
          "description": "Keycloak JWT token",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }