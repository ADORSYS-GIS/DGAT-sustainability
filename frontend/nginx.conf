# Define upstream servers
upstream keycloak_server {
    server keycloak:8080;
}

upstream backend_server {
    server backend:3001;
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name ec2-16-171-203-85.eu-north-1.compute.amazonaws.com 16.171.203.85;

    # Health check endpoint accessible on HTTP
    location /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 'OK';
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl;
    server_name ec2-16-171-203-85.eu-north-1.compute.amazonaws.com 16.171.203.85;
    root /usr/share/nginx/html;
    index index.html;

    # SSL certificates
    ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;

    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Health check endpoint
    location /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 'OK';
    }

    # Add headers to handle self-signed certificates
    add_header Access-Control-Allow-Origin '*' always;
    add_header Content-Security-Policy "upgrade-insecure-requests" always;

    # Handle client-side routing
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Specifically handle the callback route to prevent Keycloak redirect loops
    location /callback {
        try_files $uri $uri/ /index.html;
    }

    # Proxy requests to Keycloak
    location /keycloak/ {
        proxy_pass http://keycloak_server/keycloak/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Skip SSL verification
        proxy_ssl_verify off;

        # Handle redirects properly
        proxy_redirect http://keycloak_server/ https://$host/;
    }

    # Proxy requests to Backend API
    location /api {
        proxy_pass http://backend_server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}